#BlueJ class context
comment0.target=CsvReader
comment0.text=\n\ This\ is\ the\ main\ class\ for\ reading\ CSV\ data.\n\n\ @author\ Oliver\ Siegmar\n
comment1.params=fieldSeparator
comment1.target=void\ setFieldSeparator(char)
comment1.text=\n\ Sets\ the\ field\ separator\ character\ (default\:\ ','\ -\ comma).\n
comment10.params=file\ charset
comment10.target=CsvParser\ parse(java.io.File,\ java.nio.charset.Charset)
comment10.text=\n\ Constructs\ a\ new\ {@link\ CsvParser}\ for\ the\ specified\ arguments.\n\n\ @param\ file\ the\ file\ to\ read\ data\ from.\n\ @param\ charset\ the\ character\ set\ to\ use\ -\ must\ not\ be\ {@code\ null}.\n\ @return\ a\ new\ CsvParser\ -\ never\ {@code\ null}.\n\ @throws\ IOException\ if\ an\ I/O\ error\ occurs.\n
comment11.params=reader
comment11.target=CsvParser\ parse(java.io.Reader)
comment11.text=\n\ Constructs\ a\ new\ {@link\ CsvParser}\ for\ the\ specified\ arguments.\n\n\ This\ library\ uses\ built-in\ buffering,\ so\ you\ do\ not\ need\ to\ pass\ in\ a\ buffered\ Reader\n\ implementation\ such\ as\ {@link\ java.io.BufferedReader}.\n\ Performance\ may\ be\ even\ likely\ better\ if\ you\ do\ not.\n\n\ @param\ reader\ the\ data\ source\ to\ read\ from.\n\ @return\ a\ new\ CsvParser\ -\ never\ {@code\ null}.\n\ @throws\ IOException\ if\ an\ I/O\ error\ occurs.\n
comment12.params=path\ charset
comment12.target=java.io.Reader\ newPathReader(java.nio.file.Path,\ java.nio.charset.Charset)
comment2.params=textDelimiter
comment2.target=void\ setTextDelimiter(char)
comment2.text=\n\ Sets\ the\ text\ delimiter\ character\ (default\:\ '"'\ -\ double\ quotes).\n
comment3.params=containsHeader
comment3.target=void\ setContainsHeader(boolean)
comment3.text=\n\ Specifies\ if\ the\ first\ line\ should\ be\ the\ header\ (default\:\ false).\n
comment4.params=skipEmptyRows
comment4.target=void\ setSkipEmptyRows(boolean)
comment4.text=\n\ Specifies\ if\ empty\ rows\ should\ be\ skipped\ (default\:\ true).\n
comment5.params=errorOnDifferentFieldCount
comment5.target=void\ setErrorOnDifferentFieldCount(boolean)
comment5.text=\n\ Specifies\ if\ an\ exception\ should\ be\ thrown,\ if\ CSV\ data\ contains\ different\ field\ count\n\ (default\:\ false).\n
comment6.params=file\ charset
comment6.target=CsvContainer\ read(java.io.File,\ java.nio.charset.Charset)
comment6.text=\n\ Reads\ an\ entire\ file\ and\ returns\ a\ CsvContainer\ containing\ the\ data.\n\n\ @param\ file\ the\ file\ to\ read\ data\ from.\n\ @param\ charset\ the\ character\ set\ to\ use\ -\ must\ not\ be\ {@code\ null}.\n\ @return\ the\ entire\ file's\ data\ -\ never\ {@code\ null}.\n\ @throws\ IOException\ if\ an\ I/O\ error\ occurs.\n
comment7.params=path\ charset
comment7.target=CsvContainer\ read(java.nio.file.Path,\ java.nio.charset.Charset)
comment7.text=\n\ Reads\ an\ entire\ file\ and\ returns\ a\ CsvContainer\ containing\ the\ data.\n\n\ @param\ path\ the\ file\ to\ read\ data\ from.\n\ @param\ charset\ the\ character\ set\ to\ use\ -\ must\ not\ be\ {@code\ null}.\n\ @return\ the\ entire\ file's\ data\ -\ never\ {@code\ null}.\n\ @throws\ IOException\ if\ an\ I/O\ error\ occurs.\n
comment8.params=reader
comment8.target=CsvContainer\ read(java.io.Reader)
comment8.text=\n\ Reads\ from\ the\ provided\ reader\ until\ the\ end\ and\ returns\ a\ CsvContainer\ containing\ the\ data.\n\n\ This\ library\ uses\ built-in\ buffering,\ so\ you\ do\ not\ need\ to\ pass\ in\ a\ buffered\ Reader\n\ implementation\ such\ as\ {@link\ java.io.BufferedReader}.\n\ Performance\ may\ be\ even\ likely\ better\ if\ you\ do\ not.\n\n\ @param\ reader\ the\ data\ source\ to\ read\ from.\n\ @return\ the\ entire\ file's\ data\ -\ never\ {@code\ null}.\n\ @throws\ IOException\ if\ an\ I/O\ error\ occurs.\n
comment9.params=path\ charset
comment9.target=CsvParser\ parse(java.nio.file.Path,\ java.nio.charset.Charset)
comment9.text=\n\ Constructs\ a\ new\ {@link\ CsvParser}\ for\ the\ specified\ arguments.\n\n\ @param\ path\ the\ file\ to\ read\ data\ from.\n\ @param\ charset\ the\ character\ set\ to\ use\ -\ must\ not\ be\ {@code\ null}.\n\ @return\ a\ new\ CsvParser\ -\ never\ {@code\ null}.\n\ @throws\ IOException\ if\ an\ I/O\ error\ occurs.\n
numComments=13
